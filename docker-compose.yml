services:
  agrofast-nginx:
    container_name: agrofast-nginx
    extends:
      file: ./agrofast-api/docker-compose.yml
      service: agrofast-nginx

  agrofast-php-fpm:
    container_name: agrofast-php-fpm
    extends:
      file: ./agrofast-api/docker-compose.yml
      service: agrofast-php-fpm

  agrofast-postgres:
    container_name: agrofast-postgres
    extends:
      file: ./agrofast-api/docker-compose.yml
      service: agrofast-postgres

  agrofast-redis:
    container_name: agrofast-redis
    extends:
      file: ./agrofast-api/docker-compose.yml
      service: agrofast-redis

  agrofast-data-bucket:
    image: minio/minio:latest
    container_name: agrofast-data-bucket
    ports:
      - "9100:9000" # Porta de acesso ao bucket MinIO
      - "9101:9001" # Porta de acesso ao painel MinIO
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - agrofast-network

  agrofast-web:
    container_name: agrofast-web
    build:
      context: ./agrofast-web
      dockerfile: ./Dockerfile.dev
    ports:
      - "3030:3030"
    volumes:
      - ./agrofast-web:/web
    networks:
      - agrofast-network

  agrofast-portfolio:
    container_name: agrofast-portfolio
    build:
      context: ./agrofast-portfolio
      dockerfile: ./Dockerfile.dev
    ports:
      - "3020:3020"
    volumes:
      - ./agrofast-portfolio:/web
    networks:
      - agrofast-network

  # agrofast-socket:
  #   container_name: agrofast-socket
  #   build:
  #     context: ./agrofast-socket
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - "8008:3000"
  #   volumes:
  #     - ./agrofast-socket:/var/www/html/socket
  #   networks:
  #     - agrofast-network

volumes:
  postgres_data:
  minio_data:
  cache:
    driver: local

networks:
  agrofast-network:
    driver: bridge
